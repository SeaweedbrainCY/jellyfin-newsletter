name: "Jellyfin-newsletter docker image deployment"


permissions:
  contents: read
  packages: write

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'



jobs:
    security_test:
        uses: ./.github/workflows/security_test.yml 
    build_and_publish :
      needs: [security_test]
      name: Build and publish image
      runs-on: ubuntu-latest
      env:
        DOCKER_IMAGE_NAME: "jellyfin-newsletter"
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        
        - name: Extract Git commit
          id: vars
          run: | 
            echo "GIT_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            echo "CURRENT_VERSION=$(echo ${{ github.ref_name }} | sed 's/\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/')" >> $GITHUB_ENV
            echo "CURRENT_SHORT_VERSION=$(echo ${{ github.ref_name }} | sed 's/\([0-9]*\.[0-9]*\).*$/\1/')" >> $GITHUB_ENV
            echo "REPOSITORY_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV 
            echo "DATE=$(date)" >> $GITHUB_ENV
            

        - name: Set up Version file
          run: echo ${{ github.ref_name }} > VERSION

        - name: Set up Qemu 
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to GHCR 
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push Docker images
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: |
              ghcr.io/${{ env.REPOSITORY_NAME }}:latest
              ghcr.io/${{ env.REPOSITORY_NAME }}:${{ env.CURRENT_VERSION }}
              ghcr.io/${{ env.REPOSITORY_NAME }}:${{ env.CURRENT_SHORT_VERSION }}
            labels: |
              org.opencontainers.image.revision=${{ env.GIT_COMMIT }}
              org.opencontainers.image.created=${{ env.DATE }}
              org.opencontainers.image.version=${{ github.ref_name }}
              org.opencontainers.image.title="Jellyfin Newsletter" 
              org.opencontainers.image.description="A Dockerized newsletter service that connects to Jellyfin  API to notify your users of newly added media." 
              org.opencontainers.image.authors="Seaweedbrain github.com/SeaweedbrainCY" 
              org.opencontainers.image.url="https://github.com/seaweedbraincy/jellyfin-newsletter" 
              org.opencontainers.image.source="https://github.com/seaweedbraincy/jellyfin-newsletter" 
              org.opencontainers.image.licenses="MIT" 
              org.opencontainers.image.documentation="https://github.com/seaweedbraincy/jellyfin-newsletter#readme" 
              org.opencontainers.image.vendor="Seaweedbrain" 
              org.opencontainers.image.base.name="python:3.12-slim"
            annotations: |
              org.opencontainers.image.description="A Dockerized newsletter service that connects to Jellyfin  API to notify your users of newly added media."
              org.opencontainers.image.source=https://github.com/seaweedbraincy/jellyfin-newsletter
            cache-from: type=gha
            cache-to: type=gha,mode=max
            platforms: linux/amd64,linux/arm64,linux/arm/v7
            outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=A Dockerized newsletter service that connects to Jellyfin API to notify your users of newly added media.
